# Lambda функции:
# 1) 1) Есть обычная функция def hello(x): print(x * x - 10) Превратите данную
# функцию в lambda функцию

# def hello(x):
#     return x * x
# print(hello(10))

# print((lambda x: x * x)(10))

# 2) Есть список name = [“Kuma”, “Nurtilek”, “Zina”, “Edzen”, “Kuma”, “Aitenur”, “Zina” ]
# Уберите дубликаты с данного листа с помощью lambda функций

# name = ["Kuma", "Nurtilek", "Zina", "Edzen", "Kuma", "Aitenur", "Zina" ]
# print(name[1:6])

# print(lambda nam : (nam[1:6]), ["Kuma", "Nurtilek", "Zina", "Edzen", "Kuma", "Aitenur", "Zina" ] )
print((lambda c : set(c))(["Kuma", "Nurtilek", "Zina", "Edzen", "Kuma", "Aitenur", "Zina" ]))
# 3) Есть список numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] Выведите с помощью lambda
# функции чётные числа с списка
# aji = []
# numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
# def aji_func(num: list) -> list:
#      for n in num:
#          if n % 2 == 0:
#                   aji.append(n)
#      return aji
# print(aji_func(numbers))

# print(list(filter(lambda num: num % 2 == 0, [1, 2, 3, 4, 5, 6, 7, 8, 9, 10])))

# 
# 4) names = [“azat”, “zina”, “kuma”, “anna”, “sas”] Вывести с помощью lambda функции
# имена палиндромы

# Модули:
# Внимание: сперва новую папку и создайте два файла function.py, main.py. В
# первом файле создавайте функции, а в втором будете проверять функции.

# 5) Создайте модуль с двумя функциями, которые вычисляли бы периметр и
# площадь прямоугольника. Подключите этот модуль к основной программе и
# вызовите эти функции с аргументами.

# 6) У нас есть список lst = [1, 2, 3, 4 ,5, 6, 7, 8, 9, 10]. Написать функцию которая
# переворачивает список. И используйте эту функцию на другом файле

# 7) Написать функцию, которая принимает hour(час), min(минуту), sec(секунды). И
# вам нужно превратить их в секунды. Вызовите его на другом файле

# 8) Напишите функцию -- чат-бот, который
# a) a. Всегда отвечает “Конечно!” на любой вопрос
# b) b. Всегда отвечает “Успокойся”, если ты кричишь на него ВОТ ТАК!
# c) c. Всегда отвечает “Как классно, когда ты молчишь. Продолжай в том же
# духе!” Если вызвал функцию, но ничего не передал.
# d) d. В любых других случаях, отвечает “ну и что”
# e) Используйте эту функцию в другом файле

# 9) Напишите функцию, которая принимает фразу, и возвращает его сокращенную
# форму. Например: Кыргызская Республика -- КР. Ruby on Rails -- ROR. For your
# interest -- FYI и т.п. Как всегда вызовите его на другом файле

# ДОП ЗАДАНИЕ:
# 10) Меню одного из успешных ресторанов представлено в виде словаря
# menu = {
# ‘beefstrogonoff’: 350,
# ‘burger’: 200,
# ‘meatloaf’: 500,
# ‘chicken pot pie’: 400,
# ‘beefshteks’: 650
# }
# Доллар очень сильно поднялся, из-за чего владельцы заведения решили
# поднять цены на 50 сом. Вам необходимо создать новый словарь new_menu,
# который будет состоять из тех же пар ключ-значений, но с увеличенными на 50
# сом ценами. Для решения использовать генератор словарей (dict
# comprehension). Напишите функцию и вызовите его на другом файле